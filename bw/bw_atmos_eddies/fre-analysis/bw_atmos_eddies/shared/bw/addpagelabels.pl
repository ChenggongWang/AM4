#!/usr/bin/perl
use Getopt::Std;
use strict;

our($opt_h,$opt_O,$opt_l,$opt_t,$opt_d,$opt_x);
my $help = 0;
my ($ifile,$ofile);
my $numPages;

my (@labels);

unless (getopts 'hOtdxl:') {
   $help = 1;
}

if (scalar(@ARGV) == 2) {
   ($ifile,$ofile) = @ARGV;
} elsif (scalar(@ARGV) == 1) {
   $ifile = $ARGV[0];
   $ofile = $ifile;
} else {
   $help = 1;
   print "Input and output files must be specified!\n";
}

if ($help) {
   my $cmd = substr($0,rindex($0,"/")+1);
   usage($cmd);
  #print "USAGE: $cmd [-hOtx] [-l LAB1,LAB2,..] IN.nc [OUT.nc]\n";
   exit 1;
}

#die "Must specify labels" if (! $opt_l);
die "Input file does not exists!" if (! -e $ifile);
die "Can not overwrite file without the -O option!" if (-e $ofile && !$opt_O);

my $text = `cat $ifile`; chomp $text;
my @lines = split /\n/, $text;

# number of pages
my $FerretStyle = 0;
if ($text =~ /%%Pages: (\d+)\n/) {
   $numPages = $1;
   print "numPages = $numPages (ncl-type file)\n" if $opt_d;
} else {
   my @showpage = $text =~ /showpage/g;
   $numPages = @showpage;
   die "Could not determine number of pages" if !$numPages;
   print "numPages = $numPages (ferret-type file)\n" if $opt_d;
   $FerretStyle = 1;
}

# page labels (must equal number of pages)
my @labels = ( 1 .. $numPages );
if ($opt_l) {
   @labels = split /,/, $opt_l;
   print "@labels\n" if $opt_d;
   die "Number of labels not equal number of pages" if (@labels != $numPages);
}
   
# output file
open (OUT,"> $ofile") || "Cannot open $ofile for output";

# loop thru lines in file - add and modify where needed
my $oline;
my $page = 0;
foreach (@lines) {
   chomp;
   $oline = $_;

   # remove path name part of file (Ferret-type files)
   if (/^%%Title: / && $opt_t) {
      my $filepath = substr($_,9);
      my $tailname = substr($filepath,rindex($filepath,"/")+1);
      $oline = "%%Title: $tailname";
      print "Title modified\n" if $opt_d;
   }

   # add label (NCL-type files)
   if (/^%%Page: \d+ \d+/) {
      $oline =~ s/%%Page: \d+ /%%Page: $labels[$page] /;
      print OUT "$oline\n";
      print "ncl-type label added: ".$labels[$page]."\n" if $opt_d;
      $page++;
   }
   print OUT "$oline\n";

   # insert "pages atend" after Adobe header (Ferret-type files)
   if (/^%!PS-Adobe/ && $text !~ /%%Pages: (atend)/) {
      print OUT "%%Pages: (atend)\n" if !$opt_x;
      print "Pages (atend) added\n" if $opt_d;
      next;
   }

   # insert page number (Ferret-type files)
   if ($FerretStyle) {
      if (/% begin the plot/ || /^showpage/) {
         if ($page != $numPages) {
            $page++;
            print OUT "%%Page: $labels[$page-1] $page\n" if !$opt_x;
            print "ferret-type label added: ".$labels[$page-1]."\n" if $opt_d;
         }
      }
   }
}

if ($oline !~ /^%%EOF/ && !$opt_x) {
   print OUT "%%EOF\n";
   print "Added file EOF\n" if $opt_d;
}
close (OUT);

#########################

sub usage {
   my $name = shift;
   print "
[1mNAME[0m
   $name - Add page numbering to postscript files generated by gksm2ps.
   Note that gksm2ps is used by Ferret to convert meta files to postscript.
   This program should also work for postscript files generated by NCL
   (NCAR Command Language).

[1mSYNOPSIS[0m
   [1m$name[0m [-hOtxd] [-l [4mlabels[24m] [4minput.ps[24m [[4moutfile.ps[24m]

[1mOVERVIEW[0m
   The [1m$name[0m script takes a postscipt file [4minput.ps[24m and adds page
   identifiers/labels. The output is writen to file [4moutput.ps[24m.  Use the [1m-O[0m option
   to overwrite an existing output file.  Page comments are added by inserting
   '%%Page: n n' before the start of each page, where 'n' is the page number.
   The [1m-x[0m option suppresses adding page numbering.

   The default page numbering starts with 1. This can be overriden by using
   the [1m-l[0m [4mlabels[24m option, where [4mlabels[24m is a comma separated list of labels
   that must match the number of pages.

   When displaying the file with [1mgv[0m the file original path is displayed
   in the title bar. To strip the leading path information from the
   file use the [1m-t[0m option.

   This script has been tested with files generated by Ferret and NCL.\n\n";
   return 1;
}

